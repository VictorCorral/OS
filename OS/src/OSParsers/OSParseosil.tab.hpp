
/* A Bison parser, made by GNU Bison 2.4.1.  */

/* Skeleton interface for Bison's Yacc-like parsers in C
   
      Copyright (C) 1984, 1989, 1990, 2000, 2001, 2002, 2003, 2004, 2005, 2006
   Free Software Foundation, Inc.
   
   This program is free software: you can redistribute it and/or modify
   it under the terms of the GNU General Public License as published by
   the Free Software Foundation, either version 3 of the License, or
   (at your option) any later version.
   
   This program is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
   GNU General Public License for more details.
   
   You should have received a copy of the GNU General Public License
   along with this program.  If not, see <http://www.gnu.org/licenses/>.  */

/* As a special exception, you may create a larger work that contains
   part or all of the Bison parser skeleton and distribute that work
   under terms of your choice, so long as that work isn't itself a
   parser generator using the skeleton or a modified version thereof
   as a parser skeleton.  Alternatively, if you modify or redistribute
   the parser skeleton itself, you may (at your option) remove this
   special exception, which will cause the skeleton and the resulting
   Bison output files to be licensed under the GNU General Public
   License without this special exception.
   
   This special exception was added by the Free Software Foundation in
   version 2.2 of Bison.  */


/* Tokens.  */
#ifndef YYTOKENTYPE
# define YYTOKENTYPE
   /* Put the tokens into the symbol table, so that GDB and other debuggers
      know about them.  */
   enum yytokentype {
     QUOTE = 258,
     ATTRIBUTETEXT = 259,
     ELEMENTTEXT = 260,
     ITEMTEXT = 261,
     INTEGER = 262,
     DOUBLE = 263,
     TWOQUOTES = 264,
     ENDOFELEMENT = 265,
     GREATERTHAN = 266,
     OSILEND = 267,
     INSTANCEDATAEND = 268,
     INSTANCEDATASTARTEND = 269,
     EMPTYIDATT = 270,
     EMPTYNAMEATT = 271,
     EMPTYTYPEATT = 272,
     QUADRATICCOEFFICIENTSSTART = 273,
     QUADRATICCOEFFICIENTSEND = 274,
     NUMBEROFQTERMSATT = 275,
     QTERMSTART = 276,
     QTERMEND = 277,
     IDXATT = 278,
     IDXONEATT = 279,
     IDXTWOATT = 280,
     TYPEATT = 281,
     VALUEATT = 282,
     TIMEDOMAINSTART = 283,
     TIMEDOMAINEND = 284,
     STAGESSTART = 285,
     STAGESEND = 286,
     STAGESTART = 287,
     STAGEEND = 288,
     NAMEATT = 289,
     NUMBEROFSTAGESATT = 290,
     HORIZONATT = 291,
     STARTATT = 292,
     VARIABLESSTART = 293,
     CONSTRAINTSSTART = 294,
     OBJECTIVESSTART = 295,
     VARIABLESEND = 296,
     CONSTRAINTSEND = 297,
     OBJECTIVESEND = 298,
     NUMBEROFVARIABLESATT = 299,
     NUMBEROFCONSTRAINTSATT = 300,
     NUMBEROFOBJECTIVESATT = 301,
     STARTIDXATT = 302,
     VARSTART = 303,
     VAREND = 304,
     CONSTART = 305,
     CONEND = 306,
     OBJSTART = 307,
     OBJEND = 308,
     INTERVALSTART = 309,
     INTERVALEND = 310,
     MATRICESSTART = 311,
     MATRICESEND = 312,
     NUMBEROFMATRICESATT = 313,
     CONESSTART = 314,
     CONESEND = 315,
     NUMBEROFCONESATT = 316,
     HEADERSTART = 317,
     HEADEREND = 318,
     FILENAMESTART = 319,
     FILENAMEEND = 320,
     FILENAMEEMPTY = 321,
     FILENAMESTARTANDEND = 322,
     FILESOURCESTART = 323,
     FILESOURCEEND = 324,
     FILESOURCEEMPTY = 325,
     FILESOURCESTARTANDEND = 326,
     FILEDESCRIPTIONSTART = 327,
     FILEDESCRIPTIONEND = 328,
     FILEDESCRIPTIONEMPTY = 329,
     FILEDESCRIPTIONSTARTANDEND = 330,
     FILECREATORSTART = 331,
     FILECREATOREND = 332,
     FILECREATOREMPTY = 333,
     FILECREATORSTARTANDEND = 334,
     FILELICENCESTART = 335,
     FILELICENCEEND = 336,
     FILELICENCEEMPTY = 337,
     FILELICENCESTARTANDEND = 338,
     ENUMERATIONSTART = 339,
     ENUMERATIONEND = 340,
     NUMBEROFELATT = 341,
     ITEMEMPTY = 342,
     ITEMSTART = 343,
     ITEMEND = 344,
     ITEMSTARTANDEND = 345,
     BASE64START = 346,
     BASE64END = 347,
     INCRATT = 348,
     MULTATT = 349,
     SIZEOFATT = 350,
     ELSTART = 351,
     ELEND = 352,
     MATRIXSTART = 353,
     MATRIXEND = 354,
     BASEMATRIXEND = 355,
     BASEMATRIXSTART = 356,
     BLOCKSTART = 357,
     BLOCKEND = 358,
     BLOCKSSTART = 359,
     BLOCKSEND = 360,
     EMPTYSYMMETRYATT = 361,
     SYMMETRYATT = 362,
     EMPTYEXCLUDEATT = 363,
     EXCLUDEATT = 364,
     CONSTANTATT = 365,
     NUMBEROFBLOCKSATT = 366,
     NUMBEROFCOLUMNSATT = 367,
     NUMBEROFROWSATT = 368,
     NUMBEROFVARIDXATT = 369,
     BASEMATRIXIDXATT = 370,
     TARGETMATRIXFIRSTROWATT = 371,
     TARGETMATRIXFIRSTCOLATT = 372,
     BASEMATRIXSTARTROWATT = 373,
     BASEMATRIXSTARTCOLATT = 374,
     BASEMATRIXENDROWATT = 375,
     BASEMATRIXENDCOLATT = 376,
     SCALARMULTIPLIERATT = 377,
     EMPTYBASETRANSPOSEATT = 378,
     BASETRANSPOSEATT = 379,
     ELEMENTSSTART = 380,
     ELEMENTSEND = 381,
     CONSTANTELEMENTSSTART = 382,
     CONSTANTELEMENTSEND = 383,
     STARTVECTORSTART = 384,
     STARTVECTOREND = 385,
     NONZEROSSTART = 386,
     NONZEROSEND = 387,
     INDEXESSTART = 388,
     INDEXESEND = 389,
     VALUESSTART = 390,
     VALUESEND = 391,
     VARREFERENCEELEMENTSSTART = 392,
     VARREFERENCEELEMENTSEND = 393,
     LINEARELEMENTSSTART = 394,
     LINEARELEMENTSEND = 395,
     GENERALELEMENTSSTART = 396,
     GENERALELEMENTSEND = 397,
     CONREFERENCEELEMENTSSTART = 398,
     CONREFERENCEELEMENTSEND = 399,
     OBJREFERENCEELEMENTSSTART = 400,
     OBJREFERENCEELEMENTSEND = 401,
     PATTERNELEMENTSSTART = 402,
     PATTERNELEMENTSEND = 403,
     VARIDXSTART = 404,
     VARIDXEND = 405,
     TRANSFORMATIONSTART = 406,
     TRANSFORMATIONEND = 407,
     COLOFFSETSSTART = 408,
     COLOFFSETSEND = 409,
     ROWOFFSETSSTART = 410,
     ROWOFFSETSEND = 411,
     EMPTYROWMAJORATT = 412,
     ROWMAJORATT = 413,
     BLOCKROWIDXATT = 414,
     BLOCKCOLIDXATT = 415,
     DUMMY = 416,
     NONLINEAREXPRESSIONSSTART = 417,
     NONLINEAREXPRESSIONSEND = 418,
     NUMBEROFNONLINEAREXPRESSIONS = 419,
     NLSTART = 420,
     NLEND = 421,
     POWERSTART = 422,
     POWEREND = 423,
     PLUSSTART = 424,
     PLUSEND = 425,
     MINUSSTART = 426,
     MINUSEND = 427,
     DIVIDESTART = 428,
     DIVIDEEND = 429,
     LNSTART = 430,
     LNEND = 431,
     SQRTSTART = 432,
     SQRTEND = 433,
     SUMSTART = 434,
     SUMEND = 435,
     PRODUCTSTART = 436,
     PRODUCTEND = 437,
     EXPSTART = 438,
     EXPEND = 439,
     NEGATESTART = 440,
     NEGATEEND = 441,
     IFSTART = 442,
     IFEND = 443,
     SQUARESTART = 444,
     SQUAREEND = 445,
     COSSTART = 446,
     COSEND = 447,
     SINSTART = 448,
     SINEND = 449,
     VARIABLESTART = 450,
     VARIABLEEND = 451,
     ABSSTART = 452,
     ABSEND = 453,
     ERFSTART = 454,
     ERFEND = 455,
     MAXSTART = 456,
     MAXEND = 457,
     ALLDIFFSTART = 458,
     ALLDIFFEND = 459,
     MINSTART = 460,
     MINEND = 461,
     ESTART = 462,
     EEND = 463,
     PISTART = 464,
     PIEND = 465,
     TIMESSTART = 466,
     TIMESEND = 467,
     NUMBERSTART = 468,
     NUMBEREND = 469,
     MATRIXTRACESTART = 470,
     MATRIXTRACEEND = 471,
     MATRIXTOSCALARSTART = 472,
     MATRIXTOSCALAREND = 473,
     IDATT = 474,
     COEFATT = 475
   };
#endif
/* Tokens.  */
#define QUOTE 258
#define ATTRIBUTETEXT 259
#define ELEMENTTEXT 260
#define ITEMTEXT 261
#define INTEGER 262
#define DOUBLE 263
#define TWOQUOTES 264
#define ENDOFELEMENT 265
#define GREATERTHAN 266
#define OSILEND 267
#define INSTANCEDATAEND 268
#define INSTANCEDATASTARTEND 269
#define EMPTYIDATT 270
#define EMPTYNAMEATT 271
#define EMPTYTYPEATT 272
#define QUADRATICCOEFFICIENTSSTART 273
#define QUADRATICCOEFFICIENTSEND 274
#define NUMBEROFQTERMSATT 275
#define QTERMSTART 276
#define QTERMEND 277
#define IDXATT 278
#define IDXONEATT 279
#define IDXTWOATT 280
#define TYPEATT 281
#define VALUEATT 282
#define TIMEDOMAINSTART 283
#define TIMEDOMAINEND 284
#define STAGESSTART 285
#define STAGESEND 286
#define STAGESTART 287
#define STAGEEND 288
#define NAMEATT 289
#define NUMBEROFSTAGESATT 290
#define HORIZONATT 291
#define STARTATT 292
#define VARIABLESSTART 293
#define CONSTRAINTSSTART 294
#define OBJECTIVESSTART 295
#define VARIABLESEND 296
#define CONSTRAINTSEND 297
#define OBJECTIVESEND 298
#define NUMBEROFVARIABLESATT 299
#define NUMBEROFCONSTRAINTSATT 300
#define NUMBEROFOBJECTIVESATT 301
#define STARTIDXATT 302
#define VARSTART 303
#define VAREND 304
#define CONSTART 305
#define CONEND 306
#define OBJSTART 307
#define OBJEND 308
#define INTERVALSTART 309
#define INTERVALEND 310
#define MATRICESSTART 311
#define MATRICESEND 312
#define NUMBEROFMATRICESATT 313
#define CONESSTART 314
#define CONESEND 315
#define NUMBEROFCONESATT 316
#define HEADERSTART 317
#define HEADEREND 318
#define FILENAMESTART 319
#define FILENAMEEND 320
#define FILENAMEEMPTY 321
#define FILENAMESTARTANDEND 322
#define FILESOURCESTART 323
#define FILESOURCEEND 324
#define FILESOURCEEMPTY 325
#define FILESOURCESTARTANDEND 326
#define FILEDESCRIPTIONSTART 327
#define FILEDESCRIPTIONEND 328
#define FILEDESCRIPTIONEMPTY 329
#define FILEDESCRIPTIONSTARTANDEND 330
#define FILECREATORSTART 331
#define FILECREATOREND 332
#define FILECREATOREMPTY 333
#define FILECREATORSTARTANDEND 334
#define FILELICENCESTART 335
#define FILELICENCEEND 336
#define FILELICENCEEMPTY 337
#define FILELICENCESTARTANDEND 338
#define ENUMERATIONSTART 339
#define ENUMERATIONEND 340
#define NUMBEROFELATT 341
#define ITEMEMPTY 342
#define ITEMSTART 343
#define ITEMEND 344
#define ITEMSTARTANDEND 345
#define BASE64START 346
#define BASE64END 347
#define INCRATT 348
#define MULTATT 349
#define SIZEOFATT 350
#define ELSTART 351
#define ELEND 352
#define MATRIXSTART 353
#define MATRIXEND 354
#define BASEMATRIXEND 355
#define BASEMATRIXSTART 356
#define BLOCKSTART 357
#define BLOCKEND 358
#define BLOCKSSTART 359
#define BLOCKSEND 360
#define EMPTYSYMMETRYATT 361
#define SYMMETRYATT 362
#define EMPTYEXCLUDEATT 363
#define EXCLUDEATT 364
#define CONSTANTATT 365
#define NUMBEROFBLOCKSATT 366
#define NUMBEROFCOLUMNSATT 367
#define NUMBEROFROWSATT 368
#define NUMBEROFVARIDXATT 369
#define BASEMATRIXIDXATT 370
#define TARGETMATRIXFIRSTROWATT 371
#define TARGETMATRIXFIRSTCOLATT 372
#define BASEMATRIXSTARTROWATT 373
#define BASEMATRIXSTARTCOLATT 374
#define BASEMATRIXENDROWATT 375
#define BASEMATRIXENDCOLATT 376
#define SCALARMULTIPLIERATT 377
#define EMPTYBASETRANSPOSEATT 378
#define BASETRANSPOSEATT 379
#define ELEMENTSSTART 380
#define ELEMENTSEND 381
#define CONSTANTELEMENTSSTART 382
#define CONSTANTELEMENTSEND 383
#define STARTVECTORSTART 384
#define STARTVECTOREND 385
#define NONZEROSSTART 386
#define NONZEROSEND 387
#define INDEXESSTART 388
#define INDEXESEND 389
#define VALUESSTART 390
#define VALUESEND 391
#define VARREFERENCEELEMENTSSTART 392
#define VARREFERENCEELEMENTSEND 393
#define LINEARELEMENTSSTART 394
#define LINEARELEMENTSEND 395
#define GENERALELEMENTSSTART 396
#define GENERALELEMENTSEND 397
#define CONREFERENCEELEMENTSSTART 398
#define CONREFERENCEELEMENTSEND 399
#define OBJREFERENCEELEMENTSSTART 400
#define OBJREFERENCEELEMENTSEND 401
#define PATTERNELEMENTSSTART 402
#define PATTERNELEMENTSEND 403
#define VARIDXSTART 404
#define VARIDXEND 405
#define TRANSFORMATIONSTART 406
#define TRANSFORMATIONEND 407
#define COLOFFSETSSTART 408
#define COLOFFSETSEND 409
#define ROWOFFSETSSTART 410
#define ROWOFFSETSEND 411
#define EMPTYROWMAJORATT 412
#define ROWMAJORATT 413
#define BLOCKROWIDXATT 414
#define BLOCKCOLIDXATT 415
#define DUMMY 416
#define NONLINEAREXPRESSIONSSTART 417
#define NONLINEAREXPRESSIONSEND 418
#define NUMBEROFNONLINEAREXPRESSIONS 419
#define NLSTART 420
#define NLEND 421
#define POWERSTART 422
#define POWEREND 423
#define PLUSSTART 424
#define PLUSEND 425
#define MINUSSTART 426
#define MINUSEND 427
#define DIVIDESTART 428
#define DIVIDEEND 429
#define LNSTART 430
#define LNEND 431
#define SQRTSTART 432
#define SQRTEND 433
#define SUMSTART 434
#define SUMEND 435
#define PRODUCTSTART 436
#define PRODUCTEND 437
#define EXPSTART 438
#define EXPEND 439
#define NEGATESTART 440
#define NEGATEEND 441
#define IFSTART 442
#define IFEND 443
#define SQUARESTART 444
#define SQUAREEND 445
#define COSSTART 446
#define COSEND 447
#define SINSTART 448
#define SINEND 449
#define VARIABLESTART 450
#define VARIABLEEND 451
#define ABSSTART 452
#define ABSEND 453
#define ERFSTART 454
#define ERFEND 455
#define MAXSTART 456
#define MAXEND 457
#define ALLDIFFSTART 458
#define ALLDIFFEND 459
#define MINSTART 460
#define MINEND 461
#define ESTART 462
#define EEND 463
#define PISTART 464
#define PIEND 465
#define TIMESSTART 466
#define TIMESEND 467
#define NUMBERSTART 468
#define NUMBEREND 469
#define MATRIXTRACESTART 470
#define MATRIXTRACEEND 471
#define MATRIXTOSCALARSTART 472
#define MATRIXTOSCALAREND 473
#define IDATT 474
#define COEFATT 475




#if ! defined YYSTYPE && ! defined YYSTYPE_IS_DECLARED
typedef union YYSTYPE
{


	double dval;
	int ival;
	char* sval;
	



} YYSTYPE;
# define YYSTYPE_IS_TRIVIAL 1
# define yystype YYSTYPE /* obsolescent; will be withdrawn */
# define YYSTYPE_IS_DECLARED 1
#endif



#if ! defined YYLTYPE && ! defined YYLTYPE_IS_DECLARED
typedef struct YYLTYPE
{
  int first_line;
  int first_column;
  int last_line;
  int last_column;
} YYLTYPE;
# define yyltype YYLTYPE /* obsolescent; will be withdrawn */
# define YYLTYPE_IS_DECLARED 1
# define YYLTYPE_IS_TRIVIAL 1
#endif



