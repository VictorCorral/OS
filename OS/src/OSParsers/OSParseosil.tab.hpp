
/* A Bison parser, made by GNU Bison 2.4.1.  */

/* Skeleton interface for Bison's Yacc-like parsers in C
   
      Copyright (C) 1984, 1989, 1990, 2000, 2001, 2002, 2003, 2004, 2005, 2006
   Free Software Foundation, Inc.
   
   This program is free software: you can redistribute it and/or modify
   it under the terms of the GNU General Public License as published by
   the Free Software Foundation, either version 3 of the License, or
   (at your option) any later version.
   
   This program is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
   GNU General Public License for more details.
   
   You should have received a copy of the GNU General Public License
   along with this program.  If not, see <http://www.gnu.org/licenses/>.  */

/* As a special exception, you may create a larger work that contains
   part or all of the Bison parser skeleton and distribute that work
   under terms of your choice, so long as that work isn't itself a
   parser generator using the skeleton or a modified version thereof
   as a parser skeleton.  Alternatively, if you modify or redistribute
   the parser skeleton itself, you may (at your option) remove this
   special exception, which will cause the skeleton and the resulting
   Bison output files to be licensed under the GNU General Public
   License without this special exception.
   
   This special exception was added by the Free Software Foundation in
   version 2.2 of Bison.  */


/* Tokens.  */
#ifndef YYTOKENTYPE
# define YYTOKENTYPE
   /* Put the tokens into the symbol table, so that GDB and other debuggers
      know about them.  */
   enum yytokentype {
     QUOTE = 258,
     ATTRIBUTETEXT = 259,
     ELEMENTTEXT = 260,
     ITEMTEXT = 261,
     INTEGER = 262,
     DOUBLE = 263,
     TWOQUOTES = 264,
     ENDOFELEMENT = 265,
     GREATERTHAN = 266,
     OSILEND = 267,
     INSTANCEDATAEND = 268,
     INSTANCEDATASTARTEND = 269,
     EMPTYIDATT = 270,
     EMPTYNAMEATT = 271,
     EMPTYTYPEATT = 272,
     IDXATT = 273,
     IDXONEATT = 274,
     IDXTWOATT = 275,
     NAMEATT = 276,
     TYPEATT = 277,
     VALUEATT = 278,
     QUADRATICCOEFFICIENTSSTART = 279,
     QUADRATICCOEFFICIENTSEND = 280,
     NUMBEROFQTERMSATT = 281,
     QTERMSTART = 282,
     QTERMEND = 283,
     MATRICESSTART = 284,
     MATRICESEND = 285,
     NUMBEROFMATRICESATT = 286,
     CONESSTART = 287,
     CONESEND = 288,
     NUMBEROFCONESATT = 289,
     NONNEGATIVECONESTART = 290,
     NONNEGATIVECONEEND = 291,
     NONPOSITIVECONESTART = 292,
     NONPOSITIVECONEEND = 293,
     ORTHANTCONESTART = 294,
     ORTHANTCONEEND = 295,
     QUADRATICCONESTART = 296,
     QUADRATICCONEEND = 297,
     ROTATEDQUADRATICCONESTART = 298,
     ROTATEDQUADRATICCONEEND = 299,
     SEMIDEFINITECONESTART = 300,
     SEMIDEFINITECONEEND = 301,
     PRODUCTCONESTART = 302,
     PRODUCTCONEEND = 303,
     INTERSECTIONCONESTART = 304,
     INTERSECTIONCONEEND = 305,
     DUALCONESTART = 306,
     DUALCONEEND = 307,
     POLARCONESTART = 308,
     POLARCONEEND = 309,
     TIMEDOMAINSTART = 310,
     TIMEDOMAINEND = 311,
     STAGESSTART = 312,
     STAGESEND = 313,
     STAGESTART = 314,
     STAGEEND = 315,
     NUMBEROFSTAGESATT = 316,
     HORIZONATT = 317,
     STARTATT = 318,
     VARIABLESSTART = 319,
     CONSTRAINTSSTART = 320,
     OBJECTIVESSTART = 321,
     VARIABLESEND = 322,
     CONSTRAINTSEND = 323,
     OBJECTIVESEND = 324,
     NUMBEROFVARIABLESATT = 325,
     NUMBEROFCONSTRAINTSATT = 326,
     NUMBEROFOBJECTIVESATT = 327,
     STARTIDXATT = 328,
     VARSTART = 329,
     VAREND = 330,
     CONSTART = 331,
     CONEND = 332,
     OBJSTART = 333,
     OBJEND = 334,
     INTERVALSTART = 335,
     INTERVALEND = 336,
     HEADERSTART = 337,
     HEADEREND = 338,
     FILENAMESTART = 339,
     FILENAMEEND = 340,
     FILENAMEEMPTY = 341,
     FILENAMESTARTANDEND = 342,
     FILESOURCESTART = 343,
     FILESOURCEEND = 344,
     FILESOURCEEMPTY = 345,
     FILESOURCESTARTANDEND = 346,
     FILEDESCRIPTIONSTART = 347,
     FILEDESCRIPTIONEND = 348,
     FILEDESCRIPTIONEMPTY = 349,
     FILEDESCRIPTIONSTARTANDEND = 350,
     FILECREATORSTART = 351,
     FILECREATOREND = 352,
     FILECREATOREMPTY = 353,
     FILECREATORSTARTANDEND = 354,
     FILELICENCESTART = 355,
     FILELICENCEEND = 356,
     FILELICENCEEMPTY = 357,
     FILELICENCESTARTANDEND = 358,
     ENUMERATIONSTART = 359,
     ENUMERATIONEND = 360,
     NUMBEROFELATT = 361,
     ITEMEMPTY = 362,
     ITEMSTART = 363,
     ITEMEND = 364,
     ITEMSTARTANDEND = 365,
     BASE64START = 366,
     BASE64END = 367,
     INCRATT = 368,
     MULTATT = 369,
     SIZEOFATT = 370,
     ELSTART = 371,
     ELEND = 372,
     MATRIXSTART = 373,
     MATRIXEND = 374,
     BASEMATRIXEND = 375,
     BASEMATRIXSTART = 376,
     BLOCKSTART = 377,
     BLOCKEND = 378,
     BLOCKSSTART = 379,
     BLOCKSEND = 380,
     EMPTYSYMMETRYATT = 381,
     SYMMETRYATT = 382,
     EMPTYEXCLUDEATT = 383,
     EXCLUDEATT = 384,
     CONSTANTATT = 385,
     NUMBEROFBLOCKSATT = 386,
     NUMBEROFCOLUMNSATT = 387,
     NUMBEROFROWSATT = 388,
     NUMBEROFVARIDXATT = 389,
     BASEMATRIXIDXATT = 390,
     TARGETMATRIXFIRSTROWATT = 391,
     TARGETMATRIXFIRSTCOLATT = 392,
     BASEMATRIXSTARTROWATT = 393,
     BASEMATRIXSTARTCOLATT = 394,
     BASEMATRIXENDROWATT = 395,
     BASEMATRIXENDCOLATT = 396,
     SCALARMULTIPLIERATT = 397,
     EMPTYBASETRANSPOSEATT = 398,
     BASETRANSPOSEATT = 399,
     ELEMENTSSTART = 400,
     ELEMENTSEND = 401,
     CONSTANTELEMENTSSTART = 402,
     CONSTANTELEMENTSEND = 403,
     STARTVECTORSTART = 404,
     STARTVECTOREND = 405,
     NONZEROSSTART = 406,
     NONZEROSEND = 407,
     INDEXESSTART = 408,
     INDEXESEND = 409,
     VALUESSTART = 410,
     VALUESEND = 411,
     VARREFERENCEELEMENTSSTART = 412,
     VARREFERENCEELEMENTSEND = 413,
     LINEARELEMENTSSTART = 414,
     LINEARELEMENTSEND = 415,
     GENERALELEMENTSSTART = 416,
     GENERALELEMENTSEND = 417,
     CONREFERENCEELEMENTSSTART = 418,
     CONREFERENCEELEMENTSEND = 419,
     OBJREFERENCEELEMENTSSTART = 420,
     OBJREFERENCEELEMENTSEND = 421,
     PATTERNELEMENTSSTART = 422,
     PATTERNELEMENTSEND = 423,
     VARIDXSTART = 424,
     VARIDXEND = 425,
     TRANSFORMATIONSTART = 426,
     TRANSFORMATIONEND = 427,
     COLOFFSETSSTART = 428,
     COLOFFSETSEND = 429,
     ROWOFFSETSSTART = 430,
     ROWOFFSETSEND = 431,
     EMPTYROWMAJORATT = 432,
     ROWMAJORATT = 433,
     BLOCKROWIDXATT = 434,
     BLOCKCOLIDXATT = 435,
     DUMMY = 436,
     NONLINEAREXPRESSIONSSTART = 437,
     NONLINEAREXPRESSIONSEND = 438,
     NUMBEROFNONLINEAREXPRESSIONS = 439,
     NLSTART = 440,
     NLEND = 441,
     POWERSTART = 442,
     POWEREND = 443,
     PLUSSTART = 444,
     PLUSEND = 445,
     MINUSSTART = 446,
     MINUSEND = 447,
     DIVIDESTART = 448,
     DIVIDEEND = 449,
     LNSTART = 450,
     LNEND = 451,
     SQRTSTART = 452,
     SQRTEND = 453,
     SUMSTART = 454,
     SUMEND = 455,
     PRODUCTSTART = 456,
     PRODUCTEND = 457,
     EXPSTART = 458,
     EXPEND = 459,
     NEGATESTART = 460,
     NEGATEEND = 461,
     IFSTART = 462,
     IFEND = 463,
     SQUARESTART = 464,
     SQUAREEND = 465,
     COSSTART = 466,
     COSEND = 467,
     SINSTART = 468,
     SINEND = 469,
     VARIABLESTART = 470,
     VARIABLEEND = 471,
     ABSSTART = 472,
     ABSEND = 473,
     ERFSTART = 474,
     ERFEND = 475,
     MAXSTART = 476,
     MAXEND = 477,
     ALLDIFFSTART = 478,
     ALLDIFFEND = 479,
     MINSTART = 480,
     MINEND = 481,
     ESTART = 482,
     EEND = 483,
     PISTART = 484,
     PIEND = 485,
     TIMESSTART = 486,
     TIMESEND = 487,
     NUMBERSTART = 488,
     NUMBEREND = 489,
     MATRIXTRACESTART = 490,
     MATRIXTRACEEND = 491,
     MATRIXTOSCALARSTART = 492,
     MATRIXTOSCALAREND = 493,
     IDATT = 494,
     COEFATT = 495
   };
#endif
/* Tokens.  */
#define QUOTE 258
#define ATTRIBUTETEXT 259
#define ELEMENTTEXT 260
#define ITEMTEXT 261
#define INTEGER 262
#define DOUBLE 263
#define TWOQUOTES 264
#define ENDOFELEMENT 265
#define GREATERTHAN 266
#define OSILEND 267
#define INSTANCEDATAEND 268
#define INSTANCEDATASTARTEND 269
#define EMPTYIDATT 270
#define EMPTYNAMEATT 271
#define EMPTYTYPEATT 272
#define IDXATT 273
#define IDXONEATT 274
#define IDXTWOATT 275
#define NAMEATT 276
#define TYPEATT 277
#define VALUEATT 278
#define QUADRATICCOEFFICIENTSSTART 279
#define QUADRATICCOEFFICIENTSEND 280
#define NUMBEROFQTERMSATT 281
#define QTERMSTART 282
#define QTERMEND 283
#define MATRICESSTART 284
#define MATRICESEND 285
#define NUMBEROFMATRICESATT 286
#define CONESSTART 287
#define CONESEND 288
#define NUMBEROFCONESATT 289
#define NONNEGATIVECONESTART 290
#define NONNEGATIVECONEEND 291
#define NONPOSITIVECONESTART 292
#define NONPOSITIVECONEEND 293
#define ORTHANTCONESTART 294
#define ORTHANTCONEEND 295
#define QUADRATICCONESTART 296
#define QUADRATICCONEEND 297
#define ROTATEDQUADRATICCONESTART 298
#define ROTATEDQUADRATICCONEEND 299
#define SEMIDEFINITECONESTART 300
#define SEMIDEFINITECONEEND 301
#define PRODUCTCONESTART 302
#define PRODUCTCONEEND 303
#define INTERSECTIONCONESTART 304
#define INTERSECTIONCONEEND 305
#define DUALCONESTART 306
#define DUALCONEEND 307
#define POLARCONESTART 308
#define POLARCONEEND 309
#define TIMEDOMAINSTART 310
#define TIMEDOMAINEND 311
#define STAGESSTART 312
#define STAGESEND 313
#define STAGESTART 314
#define STAGEEND 315
#define NUMBEROFSTAGESATT 316
#define HORIZONATT 317
#define STARTATT 318
#define VARIABLESSTART 319
#define CONSTRAINTSSTART 320
#define OBJECTIVESSTART 321
#define VARIABLESEND 322
#define CONSTRAINTSEND 323
#define OBJECTIVESEND 324
#define NUMBEROFVARIABLESATT 325
#define NUMBEROFCONSTRAINTSATT 326
#define NUMBEROFOBJECTIVESATT 327
#define STARTIDXATT 328
#define VARSTART 329
#define VAREND 330
#define CONSTART 331
#define CONEND 332
#define OBJSTART 333
#define OBJEND 334
#define INTERVALSTART 335
#define INTERVALEND 336
#define HEADERSTART 337
#define HEADEREND 338
#define FILENAMESTART 339
#define FILENAMEEND 340
#define FILENAMEEMPTY 341
#define FILENAMESTARTANDEND 342
#define FILESOURCESTART 343
#define FILESOURCEEND 344
#define FILESOURCEEMPTY 345
#define FILESOURCESTARTANDEND 346
#define FILEDESCRIPTIONSTART 347
#define FILEDESCRIPTIONEND 348
#define FILEDESCRIPTIONEMPTY 349
#define FILEDESCRIPTIONSTARTANDEND 350
#define FILECREATORSTART 351
#define FILECREATOREND 352
#define FILECREATOREMPTY 353
#define FILECREATORSTARTANDEND 354
#define FILELICENCESTART 355
#define FILELICENCEEND 356
#define FILELICENCEEMPTY 357
#define FILELICENCESTARTANDEND 358
#define ENUMERATIONSTART 359
#define ENUMERATIONEND 360
#define NUMBEROFELATT 361
#define ITEMEMPTY 362
#define ITEMSTART 363
#define ITEMEND 364
#define ITEMSTARTANDEND 365
#define BASE64START 366
#define BASE64END 367
#define INCRATT 368
#define MULTATT 369
#define SIZEOFATT 370
#define ELSTART 371
#define ELEND 372
#define MATRIXSTART 373
#define MATRIXEND 374
#define BASEMATRIXEND 375
#define BASEMATRIXSTART 376
#define BLOCKSTART 377
#define BLOCKEND 378
#define BLOCKSSTART 379
#define BLOCKSEND 380
#define EMPTYSYMMETRYATT 381
#define SYMMETRYATT 382
#define EMPTYEXCLUDEATT 383
#define EXCLUDEATT 384
#define CONSTANTATT 385
#define NUMBEROFBLOCKSATT 386
#define NUMBEROFCOLUMNSATT 387
#define NUMBEROFROWSATT 388
#define NUMBEROFVARIDXATT 389
#define BASEMATRIXIDXATT 390
#define TARGETMATRIXFIRSTROWATT 391
#define TARGETMATRIXFIRSTCOLATT 392
#define BASEMATRIXSTARTROWATT 393
#define BASEMATRIXSTARTCOLATT 394
#define BASEMATRIXENDROWATT 395
#define BASEMATRIXENDCOLATT 396
#define SCALARMULTIPLIERATT 397
#define EMPTYBASETRANSPOSEATT 398
#define BASETRANSPOSEATT 399
#define ELEMENTSSTART 400
#define ELEMENTSEND 401
#define CONSTANTELEMENTSSTART 402
#define CONSTANTELEMENTSEND 403
#define STARTVECTORSTART 404
#define STARTVECTOREND 405
#define NONZEROSSTART 406
#define NONZEROSEND 407
#define INDEXESSTART 408
#define INDEXESEND 409
#define VALUESSTART 410
#define VALUESEND 411
#define VARREFERENCEELEMENTSSTART 412
#define VARREFERENCEELEMENTSEND 413
#define LINEARELEMENTSSTART 414
#define LINEARELEMENTSEND 415
#define GENERALELEMENTSSTART 416
#define GENERALELEMENTSEND 417
#define CONREFERENCEELEMENTSSTART 418
#define CONREFERENCEELEMENTSEND 419
#define OBJREFERENCEELEMENTSSTART 420
#define OBJREFERENCEELEMENTSEND 421
#define PATTERNELEMENTSSTART 422
#define PATTERNELEMENTSEND 423
#define VARIDXSTART 424
#define VARIDXEND 425
#define TRANSFORMATIONSTART 426
#define TRANSFORMATIONEND 427
#define COLOFFSETSSTART 428
#define COLOFFSETSEND 429
#define ROWOFFSETSSTART 430
#define ROWOFFSETSEND 431
#define EMPTYROWMAJORATT 432
#define ROWMAJORATT 433
#define BLOCKROWIDXATT 434
#define BLOCKCOLIDXATT 435
#define DUMMY 436
#define NONLINEAREXPRESSIONSSTART 437
#define NONLINEAREXPRESSIONSEND 438
#define NUMBEROFNONLINEAREXPRESSIONS 439
#define NLSTART 440
#define NLEND 441
#define POWERSTART 442
#define POWEREND 443
#define PLUSSTART 444
#define PLUSEND 445
#define MINUSSTART 446
#define MINUSEND 447
#define DIVIDESTART 448
#define DIVIDEEND 449
#define LNSTART 450
#define LNEND 451
#define SQRTSTART 452
#define SQRTEND 453
#define SUMSTART 454
#define SUMEND 455
#define PRODUCTSTART 456
#define PRODUCTEND 457
#define EXPSTART 458
#define EXPEND 459
#define NEGATESTART 460
#define NEGATEEND 461
#define IFSTART 462
#define IFEND 463
#define SQUARESTART 464
#define SQUAREEND 465
#define COSSTART 466
#define COSEND 467
#define SINSTART 468
#define SINEND 469
#define VARIABLESTART 470
#define VARIABLEEND 471
#define ABSSTART 472
#define ABSEND 473
#define ERFSTART 474
#define ERFEND 475
#define MAXSTART 476
#define MAXEND 477
#define ALLDIFFSTART 478
#define ALLDIFFEND 479
#define MINSTART 480
#define MINEND 481
#define ESTART 482
#define EEND 483
#define PISTART 484
#define PIEND 485
#define TIMESSTART 486
#define TIMESEND 487
#define NUMBERSTART 488
#define NUMBEREND 489
#define MATRIXTRACESTART 490
#define MATRIXTRACEEND 491
#define MATRIXTOSCALARSTART 492
#define MATRIXTOSCALAREND 493
#define IDATT 494
#define COEFATT 495




#if ! defined YYSTYPE && ! defined YYSTYPE_IS_DECLARED
typedef union YYSTYPE
{


	double dval;
	int ival;
	char* sval;
	



} YYSTYPE;
# define YYSTYPE_IS_TRIVIAL 1
# define yystype YYSTYPE /* obsolescent; will be withdrawn */
# define YYSTYPE_IS_DECLARED 1
#endif



#if ! defined YYLTYPE && ! defined YYLTYPE_IS_DECLARED
typedef struct YYLTYPE
{
  int first_line;
  int first_column;
  int last_line;
  int last_column;
} YYLTYPE;
# define yyltype YYLTYPE /* obsolescent; will be withdrawn */
# define YYLTYPE_IS_DECLARED 1
# define YYLTYPE_IS_TRIVIAL 1
#endif



